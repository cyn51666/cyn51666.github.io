<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://cyn51666.github.io/atom.xml" rel="self"/>
  
  <link href="https://cyn51666.github.io/"/>
  <updated>2020-11-01T13:45:30.070Z</updated>
  <id>https://cyn51666.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分组查询与统计</title>
    <link href="https://cyn51666.github.io/2020/11/01/%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%E4%B8%8E%E7%BB%9F%E8%AE%A1/"/>
    <id>https://cyn51666.github.io/2020/11/01/%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%E4%B8%8E%E7%BB%9F%E8%AE%A1/</id>
    <published>2020-11-01T13:31:00.000Z</published>
    <updated>2020-11-01T13:45:30.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用group-by分组"><a class="markdownIt-Anchor" href="#使用group-by分组"></a> 使用Group By分组</h2><ol><li><p>分组汇总原理分析</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101213539.png" alt="20201101213539" /></p></li><li><p>空不参与查询</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101214104.png" alt="20201101214104" /></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用group-by分组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用group-by分组&quot;&gt;&lt;/a&gt; 使用Group By分组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;分组汇总原理分析&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>最大最小平均值</title>
    <link href="https://cyn51666.github.io/2020/11/01/%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%80%BC/"/>
    <id>https://cyn51666.github.io/2020/11/01/%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%80%BC/</id>
    <published>2020-11-01T12:04:00.000Z</published>
    <updated>2020-11-01T12:45:52.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> 聚合函数</h2><ol><li><p>对某一列求和，对满足条件的记录总数求和</p><p>select SUM(CSharp) as c#总成绩  from ScoreList<br />select 总人数 = COUNT（*） from Students</p></li><li><p>求最大，最小，平均值</p><p>select MAX(CSharp) as C#最高分,MIN(CSharp) as C#最低分 from ScoreList<br />select AVG(CSharp) as C#平均分,AVG(SqlServerDB) as DB平均分, from ScoreList<br /><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101204536.png" alt="20201101204536" /></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;聚合函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#聚合函数&quot;&gt;&lt;/a&gt; 聚合函数&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对某一列求和，对满足条件的记录总数求和&lt;/p&gt;
&lt;p&gt;select SUM(CSharp) as c#总成绩  </summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据库创建完整过程</title>
    <link href="https://cyn51666.github.io/2020/11/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E5%AE%8C%E6%95%B4%E8%BF%87%E7%A8%8B/"/>
    <id>https://cyn51666.github.io/2020/11/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E5%AE%8C%E6%95%B4%E8%BF%87%E7%A8%8B/</id>
    <published>2020-10-31T23:06:51.000Z</published>
    <updated>2020-11-01T12:30:19.943Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--指向当前要使用的数据库</span><br><span class="line">use master</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line">--判断当前数据库是否存在</span><br><span class="line">if exists (select * from sysdatabases where name&#x3D;&#39;StudentManageDB&#39;)</span><br><span class="line">drop database StudentManageDB--删除数据库</span><br><span class="line">go</span><br><span class="line">--创建数据库</span><br><span class="line">create database StudentManageDB</span><br><span class="line">on primary</span><br><span class="line">(</span><br><span class="line">--数据库文件的逻辑名</span><br><span class="line">    name&#x3D;&#39;StudentManageDB_data&#39;,</span><br><span class="line">    --数据库物理文件名（绝对路径）</span><br><span class="line">    filename&#x3D;&#39;D:\DB\StudentManageDB_data.mdf&#39;,</span><br><span class="line">    --数据库文件初始大小</span><br><span class="line">    size&#x3D;10MB,</span><br><span class="line">    --数据文件增长量</span><br><span class="line">    filegrowth&#x3D;1MB</span><br><span class="line">)</span><br><span class="line">--创建日志文件</span><br><span class="line">log on</span><br><span class="line">(</span><br><span class="line">    name&#x3D;&#39;StudentManageDB_log&#39;,</span><br><span class="line">    filename&#x3D;&#39;D:\DB\StudentManageDB_log.ldf&#39;,</span><br><span class="line">    size&#x3D;2MB,</span><br><span class="line">    filegrowth&#x3D;1MB</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建学员信息数据表</span><br><span class="line">use StudentManageDB</span><br><span class="line">go</span><br><span class="line">if exists (select * from sysobjects where name&#x3D;&#39;Students&#39;)</span><br><span class="line">drop table Students</span><br><span class="line">go</span><br><span class="line">create table Students</span><br><span class="line">(</span><br><span class="line">    StudentId int identity(100000,1) ,</span><br><span class="line">    StudentName varchar(20) not null,</span><br><span class="line">    Gender char(2)  not null,</span><br><span class="line">    Birthday datetime  not null,</span><br><span class="line">    StudentIdNo numeric(18,0) not null,--身份证号   </span><br><span class="line">    Age int not null,</span><br><span class="line">    PhoneNumber varchar(50),</span><br><span class="line">    StudentAddress varchar(500),</span><br><span class="line">    ClassId int not null  --班级外键</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建班级表</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;StudentClass&#39;)</span><br><span class="line">drop table StudentClass</span><br><span class="line">go</span><br><span class="line">create table StudentClass</span><br><span class="line">(</span><br><span class="line">ClassId int primary key,</span><br><span class="line">    ClassName varchar(20) not null</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建成绩表</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;ScoreList&#39;)</span><br><span class="line">drop table ScoreList</span><br><span class="line">go</span><br><span class="line">create table ScoreList</span><br><span class="line">(</span><br><span class="line">    Id int identity(1,1) primary key,</span><br><span class="line">    StudentId int not null,</span><br><span class="line">    CSharp int null,</span><br><span class="line">    SQLServerDB int null,</span><br><span class="line">    UpdateTime datetime </span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建管理员用户表</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;Admins&#39;)</span><br><span class="line">drop table Admins</span><br><span class="line">create table Admins</span><br><span class="line">(</span><br><span class="line">LoginId int identity(1000,1) primary key,</span><br><span class="line">    LoginPwd varchar(20) not null,</span><br><span class="line">    AdminName varchar(20) not null</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建数据表的各种约束</span><br><span class="line">use StudentManageDB</span><br><span class="line">go</span><br><span class="line">--创建“主键”约束primary key</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;pk_StudentId&#39;)</span><br><span class="line">alter table Students drop constraint pk_StudentId</span><br><span class="line">alter table Students</span><br><span class="line">add constraint pk_StudentId primary key (StudentId)</span><br><span class="line"></span><br><span class="line">--创建检查约束check</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;ck_Age&#39;)</span><br><span class="line">alter table Students drop constraint ck_Age</span><br><span class="line">alter table Students</span><br><span class="line">add constraint ck_Age check (Age between 18 and 35) </span><br><span class="line"></span><br><span class="line">--创建唯一约束unique</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;uq_StudentIdNo&#39;)</span><br><span class="line">alter table Students drop constraint uq_StudentIdNo</span><br><span class="line">alter table Students</span><br><span class="line">add constraint uq_StudentIdNo unique (StudentIdNo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--创建身份证的长度检查约束</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;ck_StudentIdNo&#39;)</span><br><span class="line">alter table Students drop constraint ck_StudentIdNo</span><br><span class="line">alter table Students</span><br><span class="line">add constraint ck_StudentIdNo check (len(StudentIdNo)&#x3D;18)</span><br><span class="line"></span><br><span class="line">--创建默认约束 </span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;df_StudentAddress&#39;)</span><br><span class="line">alter table Students drop constraint df_StudentAddress</span><br><span class="line">alter table Students </span><br><span class="line">add constraint df_StudentAddress default (&#39;地址不详&#39; ) for StudentAddress</span><br><span class="line"></span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;df_UpdateTime&#39;)</span><br><span class="line">alter table ScoreList drop constraint df_UpdateTime</span><br><span class="line">alter table ScoreList </span><br><span class="line">add constraint df_UpdateTime default (getdate() ) for UpdateTime</span><br><span class="line"></span><br><span class="line">--创建外键约束</span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;fk_classId&#39;)</span><br><span class="line">alter table Students drop constraint fk_classId</span><br><span class="line">alter table Students</span><br><span class="line">add constraint fk_classId foreign key (ClassId) references StudentClass(ClassId)</span><br><span class="line"></span><br><span class="line">if exists(select * from sysobjects where name&#x3D;&#39;fk_StudentId&#39;)</span><br><span class="line">alter table ScoreList drop constraint fk_StudentId</span><br><span class="line">alter table ScoreList</span><br><span class="line">add constraint fk_StudentId foreign key(StudentId) references Students(StudentId)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------插入数据--------------------------------------</span><br><span class="line">use StudentManageDB</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line">--插入班级数据</span><br><span class="line">insert into StudentClass(ClassId,ClassName) values(1,&#39;软件1班&#39;)</span><br><span class="line">insert into StudentClass(ClassId,ClassName) values(2,&#39;软件2班&#39;)</span><br><span class="line">insert into StudentClass(ClassId,ClassName) values(3,&#39;计算机1班&#39;)</span><br><span class="line">insert into StudentClass(ClassId,ClassName) values(4,&#39;计算机2班&#39;)</span><br><span class="line">--insert into StudentClass(ClassId,ClassName) values(5,&#39;网络1班&#39;)</span><br><span class="line">--insert into StudentClass(ClassId,ClassName) values(6,&#39;网络2班&#39;)</span><br><span class="line"></span><br><span class="line">--插入学员信息</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;王小虎&#39;,&#39;男&#39;,&#39;1989-08-07&#39;,22,120223198908071111,&#39;022-22222222&#39;,&#39;天津市南开区红磡公寓5-5-102&#39;,1)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;贺小张&#39;,&#39;女&#39;,&#39;1989-05-06&#39;,22,120223198905062426,&#39;022-33333333&#39;,&#39;天津市河北区王串场58号&#39;,2)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;马小李&#39;,&#39;男&#39;,&#39;1990-02-07&#39;,21,120223199002078915,&#39;022-44444444&#39;,&#39;天津市红桥区丁字沽曙光路79号&#39;,4)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;冯小强&#39;,&#39;女&#39;,&#39;1987-05-12&#39;,24,130223198705125167,&#39;022-55555555&#39;,default,2)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;杜小丽&#39;,&#39;女&#39;,&#39;1986-05-08&#39;,25,130223198605081528,&#39;022-66666666&#39;,&#39;河北衡水路北道69号&#39;,1)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;王俊桥&#39;,&#39;男&#39;,&#39;1987-07-18&#39;,24,130223198707182235,&#39;022-77777777&#39;,default,1)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;张永利&#39;,&#39;男&#39;,&#39;1988-09-28&#39;,24,130223198909282235,&#39;022-88888888&#39;,&#39;河北保定市风华道12号&#39;,3)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;李铭&#39;,&#39;男&#39;,&#39;1987-01-18&#39;,24,130223198701182257,&#39;022-99999999&#39;,&#39;河北邢台市幸福路5号&#39;,1)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;宁俊燕&#39;,&#39;女&#39;,&#39;1987-06-15&#39;,24,130223198706152211,&#39;022-11111111&#39;,default,3)</span><br><span class="line">insert into Students (StudentName,Gender,Birthday,Age,StudentIdNo,PhoneNumber,StudentAddress,ClassId)</span><br><span class="line">         values(&#39;刘玲玲&#39;,&#39;女&#39;,&#39;1989-08-19&#39;,24,130223198908192235,&#39;022-11111222&#39;,default,4)</span><br><span class="line">         </span><br><span class="line">            </span><br><span class="line">         </span><br><span class="line">--插入成绩信息</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100000,60,78)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100001,55,88)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100002,90,58)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100003,88,75)</span><br><span class="line"></span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100004,62,88)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100006,52,80)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100007,91,66)</span><br><span class="line">insert into ScoreList (StudentId,CSharp,SQLServerDB)values(100009,78,35)</span><br><span class="line"></span><br><span class="line">--插入管理员信息</span><br><span class="line">insert into Admins (LoginPwd,AdminName) values(123456,&#39;王晓军&#39;)</span><br><span class="line">insert into Admins (LoginPwd,AdminName) values(123456,&#39;张明丽&#39;)</span><br><span class="line"></span><br><span class="line">--删除学员信息</span><br><span class="line">--delete from Students </span><br><span class="line"></span><br><span class="line">--truncate table Students --删除全部数据以后，自动标识列重新编号</span><br><span class="line"></span><br><span class="line">--显示学员信息和班级信息</span><br><span class="line">select * from Students</span><br><span class="line">select * from StudentClass</span><br><span class="line">select * from ScoreList</span><br><span class="line">select * from Admins</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据库基本模糊查询</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-10-29T12:14:00.000Z</published>
    <updated>2020-10-30T13:46:36.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-查询过程与基本原理"><a class="markdownIt-Anchor" href="#1-查询过程与基本原理"></a> 1. 查询过程与基本原理</h2><ol><li><p>查询与响应过程</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030203320.png" alt="20201030203320" /></p></li><li><p>理解查询</p><ol><li>服务器执行命令，在原始数据表中查找符合条件的数据，产生一个虚拟表</li><li>虚拟表是数据组合后的重新展示，而不是原始的物理数据</li></ol></li></ol><h2 id="2-查询实现过程分析"><a class="markdownIt-Anchor" href="#2-查询实现过程分析"></a> 2. 查询实现过程分析</h2><p>简单查询过程</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030203923.png" alt="20201030203923" /></p><h2 id="3-基本查询"><a class="markdownIt-Anchor" href="#3-基本查询"></a> 3. 基本查询</h2><ol><li><p>查询一般有四个基本组成部分<br />查询内容 select StudentId,StudentName,Gender<br />查询对象 from Students<br />过滤条件 where Gender=‘男’<br />结果排序 order by StudentId DESC</p></li><li><p>基本查询语法框架<br />select &lt;列名&gt;<br />from &lt;表名&gt;<br />[where &lt;查询条件表达式&gt;]<br />[order by &lt;排序的列名&gt;[ASC或DESC]]<br />注意：多个查询条件用and</p></li><li><p>使用AS或使用=重新命名字段</p><p>select StudentName as 姓名,Gender as 性别,出生年月=Birthday from Students where Gender = ‘男’</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030205752.png" alt="20201030205752" /></p></li><li><p>加号的使用</p><p>select StudentName,地址和电话=StudentAddress +’(’+ PhoneNumber + ‘)’ from Students where Gender = ‘男’</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030210430.png" alt="20201030210430" /></p></li><li><p>查询空列</p><p>insert into ScoreList(StudentId,CSharp)values(100009,78)<br />select *from ScoreList where SQLServerDB is null</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030210903.png" alt="20201030210903" /></p></li><li><p>使用常量列</p><p>select Studentname,Gender,所在学校=‘天津大学’ from Students where Gender = ‘男’ and Age &gt;= 24</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030211447.png" alt="20201030211447" /></p></li><li><p>限制固定行数</p><p>select top 5 StudentName,Gender,Birthday from Students</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030211547.png" alt="20201030211547" /></p></li><li><p>返回百分之多少行</p><p>select top 20 percent StudentName,Gender,Birthday from Students</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030211735.png" alt="20201030211735" /></p></li><li><p>升序排列</p><p>select StudentId,(CSharp+5) as C#,DB = SQLServerDB<br />from ScoreList where (CSharp+5) &gt; 90<br />order by CSharp ASC</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030212538.png" alt="20201030212538" /></p></li><li><p>降序排列</p><p>select StudentId,(CSharp+5) as C#,DB = SQLServerDB<br />from ScoreList where (CSharp+5) &gt; 90<br />order by CSharp DESC,SQLServerDB ASC</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030212604.png" alt="20201030212604" /></p></li></ol><h2 id="4-模糊查询"><a class="markdownIt-Anchor" href="#4-模糊查询"></a> 4. 模糊查询</h2><ol><li><p>模糊查询LIKE</p><p>使用LIKE查询时，字段中的内容不一定与查询内容完全匹配，只要字段中包含这些内容即可</p><p>select StudentName,StudentAddress from Students<br />where StudentAddress like ‘天津%’</p><p>select StudentName,StudentAddress from Students<br />where StudentAddress like ‘%小%’</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030213611.png" alt="20201030213611" /></p></li><li><p>模糊查询between</p><p>把某一字段中的值限定在特定范围内的记录查询出来</p><p>select *from ScoreList<br />where CSharp between 80 and 90</p><p>select StudentName,Birthday from Students<br />where Birthday between ‘1987-1-1’ and ‘1988-1-1’</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030214025.png" alt="20201030214025" /></p></li><li><p>模糊查询in</p><p>把某一个字段中的内容与所列出的查询内容列表匹配的记录查询出来</p><p>select StudentName,Birthday,Age from Students<br />where Age in (21,22,23)</p><p>select StudentName,Birthday,Age from Students<br />where StudentName in (‘小李’，‘小王’，‘小华’)</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030214559.png" alt="20201030214559" /></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-查询过程与基本原理&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-查询过程与基本原理&quot;&gt;&lt;/a&gt; 1. 查询过程与基本原理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查询与响应过程&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据库键约束</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%AE%E7%BA%A6%E6%9D%9F/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%AE%E7%BA%A6%E6%9D%9F/</id>
    <published>2020-10-29T10:44:46.000Z</published>
    <updated>2020-10-30T12:20:14.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据完整性"><a class="markdownIt-Anchor" href="#数据完整性"></a> 数据完整性</h2><ol><li>观察并分析以下示例数据表中的数据</li></ol><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030184927.png" alt="20201030184927" /></p><ol start="2"><li><p>总结分析</p><ol><li><p>当前数据存在不准确，不一致的数据，则数据库失去了完整性</p></li><li><p>数据完整性破坏一般由数据库的设计不合理导致，应避免出现</p></li></ol></li><li><p>数据完整性概念<br />能确保存储在数据库中的数据的准确性和一致性</p></li></ol><h2 id="完整性约束的类型"><a class="markdownIt-Anchor" href="#完整性约束的类型"></a> 完整性约束的类型</h2><ol><li>常用三种类型的约束保证数据完整性</li></ol><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201030185930.png" alt="20201030185930" /></p><h2 id="主键约束与唯一键约束"><a class="markdownIt-Anchor" href="#主键约束与唯一键约束"></a> 主键约束与唯一键约束</h2><ol><li><p>添加约束的基本语法<br />alter table 表名 add constraint 约束名 约束类型(具体的约束说明)</p></li><li><p>约束名的取名规则推荐采用：约束类型_约束字段</p><p>主键约束（Primary Key）：如 PK_StudentId</p><p>唯一键约束（Unique Key）：如 UQ_StudentIdNo</p><p>检查约束（Check Key）: 如 CK_Age</p><p>默认约束（Default Key）： 如 DF_StudentAddress</p><p>外键约束（Foreign Key）： 如 FK_ClassId</p></li><li><p>主键约束，唯一键约束，检查约束，默认约束，外键约束</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">use StudentManageDB</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line">-创建主键约束Primary Key</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;pk_StudentId&#39;)</span><br><span class="line">alter table Students drop constrain pk_studentId</span><br><span class="line">alter table Students add constrain pk_studentId primary key(studentId)</span><br><span class="line"></span><br><span class="line">-创建唯一键约束unique</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;pk_StudentId&#39;)</span><br><span class="line">alter table Students drop constrain uk_studentIdNo</span><br><span class="line">alter table Students add constrain uk_studentIdNo unique(studentIdNo)</span><br><span class="line"></span><br><span class="line">-创建检查约束</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;ck_Age&#39;)</span><br><span class="line">alter table Students drop constrain ck_Age</span><br><span class="line">alter table Students add constrain ck_Age check(Age between 18 and 35)</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;ck_PhoneNumber&#39;)</span><br><span class="line">alter table Students drop constrain ck_PhoneNumber</span><br><span class="line">alter table Students add constrain ck_PhoneNumber check(len(PhoneNumber)&#x3D;11))</span><br><span class="line"></span><br><span class="line">-创建默认约束</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;df_Address&#39;)</span><br><span class="line">alter table Students drop constrain df_Address</span><br><span class="line">alter table Students add constrain df_Address deafult(&#39;地址不详&#39;) for StudentAddress</span><br><span class="line"></span><br><span class="line">-使用默认值插入数据</span><br><span class="line">insert into Students(StudentName,Gender,Birthday,Age,StudentNo,PhoneNumber,StudentAddress,ClassId)values(&#39;小刘&#39;,&#39;女&#39;,&#39;1998-10-10&#39;,24,123456789987654321,&#39;022-11111111&#39;,default,4)</span><br><span class="line"></span><br><span class="line">-外键约束</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;fk_ClassId&#39;)</span><br><span class="line">alter table Students drop constrain fk_ClassId</span><br><span class="line">alter table Students add constrain fk_ClassId foreign key(ClassId) reference StudentClass(ClassId)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据完整性&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据完整性&quot;&gt;&lt;/a&gt; 数据完整性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;观察并分析以下示例数据表中的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.gith</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据的增删查改</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/</id>
    <published>2020-10-28T23:06:51.000Z</published>
    <updated>2020-10-29T02:55:08.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-插入实体增"><a class="markdownIt-Anchor" href="#1-插入实体增"></a> 1. 插入实体（增）</h2><ol><li><p>插入实体（数据行语法）<br />insert [into] &lt;表名&gt; values (值列表)</p></li><li><p>插入实体的SQL语句示例</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into Students(StudentName,Gender,Birthday,Age,StudentNo,PhoneNumber,StudentAddress,ClassId)values(&#39;马小南&#39;,&#39;男&#39;,&#39;1990-02-07&#39;,21,120223199002078915,&#39;022-888888&#39;,&#39;天津曙光路89号&#39;,4)</span><br></pre></td></tr></table></figure><ol start="3"><li>注意事项<ol><li>列名个数=对应值个数</li><li>非值类型数据必须放在单引号内</li><li>数据值的类型必须与定义的字段类型一致</li></ol></li></ol><h2 id="2-删除实体删"><a class="markdownIt-Anchor" href="#2-删除实体删"></a> 2. 删除实体（删）</h2><ol><li><p>删除数据表的基本语法<br />delete from &lt;表名&gt;[where&lt;删除条件&gt;]<br />truncate table&lt;表名&gt;<br />注意：使用删除语句时，一定要注意where条件配合使用</p></li><li><p>删除实体的SQL语句示例</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from Students where StudentId&#x3D;100002</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028215730.png" alt="20201028215730" /></p><h2 id="3-查询实体查"><a class="markdownIt-Anchor" href="#3-查询实体查"></a> 3. 查询实体（查）</h2><ol><li><p>查询基本语法<br />select &lt;列名&gt; from &lt;源表名&gt;[where&lt;查询条件&gt;]</p></li><li><p>查询实体的SQL语句示例</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select StudentId,StudentName from Students --查询两个字段  </span><br><span class="line">select * from Students  </span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028213308.png" alt="20201028213308" /></p><h2 id="4-更新实体改"><a class="markdownIt-Anchor" href="#4-更新实体改"></a> 4. 更新实体（改）</h2><ol><li>更新实体语法<br />update &lt;表名&gt; set &lt;列名 = 更新值&gt;[where&lt;更新条件&gt;]</li><li>更新实体的SQL语句示例<br /><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028214314.png" alt="20201028214314" /></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-插入实体增&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-插入实体增&quot;&gt;&lt;/a&gt; 1. 插入实体（增）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;插入实体（数据行语法）&lt;br /&gt;
insert [into] &amp;lt;表名&amp;gt; v</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>sql语句的执行顺序</title>
    <link href="https://cyn51666.github.io/2020/10/29/sql%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/"/>
    <id>https://cyn51666.github.io/2020/10/29/sql%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</id>
    <published>2020-10-28T22:11:51.000Z</published>
    <updated>2020-11-01T12:06:37.408Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sql语句的执行顺序为"><a class="markdownIt-Anchor" href="#sql语句的执行顺序为"></a> sql语句的执行顺序为</h2><p>–第一步：执行FROM</p><p>–第二步：WHERE条件过滤</p><p>–第三步：GROUP BY分组</p><p>–第四步：执行SELECT投影列，聚和函数例如count(*)</p><p>–第五步：HAVING条件过滤</p><p>–第六步：执行ORDER BY 排序</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sql语句的执行顺序为&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sql语句的执行顺序为&quot;&gt;&lt;/a&gt; sql语句的执行顺序为&lt;/h2&gt;
&lt;p&gt;–第一步：执行FROM&lt;/p&gt;
&lt;p&gt;–第二步：WHERE条件过滤&lt;/p&gt;
&lt;p&gt;–第三步</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>sql运算符及优先级</title>
    <link href="https://cyn51666.github.io/2020/10/29/sql%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%8A%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <id>https://cyn51666.github.io/2020/10/29/sql%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%8A%E4%BC%98%E5%85%88%E7%BA%A7/</id>
    <published>2020-10-28T21:35:51.000Z</published>
    <updated>2020-10-29T02:54:33.603Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在sql语言中常用的运算符有以下几种"><a class="markdownIt-Anchor" href="#在sql语言中常用的运算符有以下几种"></a> 在sql语言中常用的运算符有以下几种：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1. 算术运算符  </span><br><span class="line">加 +、-（减）、*（乘）、&#x2F;（除）、%（取模，也就是商）  </span><br><span class="line"></span><br><span class="line">2. 赋值运算符  </span><br><span class="line">等号&quot;&#x3D;&quot;表示赋值，例如：Name&#x3D;‘王华’</span><br><span class="line"></span><br><span class="line">3. 比较运算符  </span><br><span class="line">等于&#x3D;&#x3D;  </span><br><span class="line">大于&gt;  </span><br><span class="line">小于&lt;  </span><br><span class="line">不等于&lt;&gt;  </span><br><span class="line">大于等于&gt;&#x3D;  </span><br><span class="line">小于等于&lt;&#x3D;  </span><br><span class="line">不等于!&#x3D;</span><br><span class="line"></span><br><span class="line">4. 逻辑运算符  </span><br><span class="line">逻辑运算符用来对某个条件进行判断，以获得判断的真假，返回带有true或false值得布尔数据类型  </span><br><span class="line">AND当且仅当两个布尔表达式都为true时，返回true  </span><br><span class="line">OR当且仅当两个布尔表达式都为false时，返回false  </span><br><span class="line">NOT对布尔表达式的值取反，优先级别最高</span><br></pre></td></tr></table></figure><h2 id="数据库常用的运算符的优先级"><a class="markdownIt-Anchor" href="#数据库常用的运算符的优先级"></a> 数据库常用的运算符的优先级</h2><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028213617.png" alt="20201028213617" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;在sql语言中常用的运算符有以下几种&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#在sql语言中常用的运算符有以下几种&quot;&gt;&lt;/a&gt; 在sql语言中常用的运算符有以下几种：&lt;/h2&gt;
&lt;figure class=&quot;highlight p</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>sql数据类型</title>
    <link href="https://cyn51666.github.io/2020/10/29/sql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://cyn51666.github.io/2020/10/29/sql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-10-28T20:55:50.000Z</published>
    <updated>2020-10-29T02:54:41.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sqlserver数据类型"><a class="markdownIt-Anchor" href="#sqlserver数据类型"></a> SQLServer数据类型</h2><h3 id="1-文本类型"><a class="markdownIt-Anchor" href="#1-文本类型"></a> 1. 文本类型</h3><ol><li><p>char:固定长度的非Unicode字符数据，最大长度为8000个字符</p></li><li><p>vchar:可变长度的非Unicode数据，最大长度为8000个字符</p></li><li><p>text:存储长文本信息，最大长度为2^31-1(2147483647)个字符</p></li><li><p>nchar:固定长度的Unicode数据，最大长度为4000个字符</p></li><li><p>nvchar:固定长度的Unicode数据，最大长度为4000个字符</p></li><li><p>text:存储可变长文本信息，最大长度为2^30-1个字符</p></li></ol><h3 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意：</h3><ol><li><p>Unicode是国际组织制定的可以容纳世界上所有文字和字符的编码方案</p></li><li><p>带n的数据类型长度是不带n的两倍，比如nchar(1)和char(2)长度相同</p></li></ol><h3 id="2-值类型"><a class="markdownIt-Anchor" href="#2-值类型"></a> 2. 值类型</h3><ol><li>整数类型</li></ol><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028192808.png" alt="20201028192808" /></p><ol start="2"><li>精确数字类型</li></ol><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028192848.png" alt="20201028192848" /></p><ol start="3"><li>近似数字（浮点）类型</li></ol><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028192911.png" alt="20201028192911" /></p><h3 id="3-日期类型"><a class="markdownIt-Anchor" href="#3-日期类型"></a> 3. 日期类型</h3><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028193316.png" alt="20201028193316" /></p><p>注意：日期在使用时要用单引号（’’）括起来，建议都使用datetime</p><h3 id="4-货币类型"><a class="markdownIt-Anchor" href="#4-货币类型"></a> 4. 货币类型</h3><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028193728.png" alt="20201028193728" /></p><h3 id="5-位类型"><a class="markdownIt-Anchor" href="#5-位类型"></a> 5. 位类型</h3><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028193759.png" alt="20201028193759" /></p><h3 id="6-二进制类型"><a class="markdownIt-Anchor" href="#6-二进制类型"></a> 6. 二进制类型</h3><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028193835.png" alt="20201028193835" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sqlserver数据类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sqlserver数据类型&quot;&gt;&lt;/a&gt; SQLServer数据类型&lt;/h2&gt;
&lt;h3 id=&quot;1-文本类型&quot;&gt;&lt;a class=&quot;markdownIt-Ancho</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>多表之间的数据查询</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E5%A4%9A%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E5%A4%9A%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-10-28T19:00:51.000Z</published>
    <updated>2020-11-01T13:30:47.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-内连接查询"><a class="markdownIt-Anchor" href="#1-内连接查询"></a> 1. 内连接查询</h2><ol><li><p>内连接（inner join …on…）查询<br /><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101204946.png" alt="20201101204946" /></p></li><li><p>测试</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101211052.png" alt="20201101211052" /></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select Students.StudentId,C#成绩&#x3D;CSharp,StudentName from ScoreList </span><br><span class="line">inner join Students on Students.StudentId &#x3D; Scorelist.StudentId</span><br><span class="line">where CSharp &gt; 80</span><br><span class="line">go </span><br></pre></td></tr></table></figure></li></ol><h2 id="2-左外连接查询"><a class="markdownIt-Anchor" href="#2-左外连接查询"></a> 2. 左外连接查询</h2><ol><li><p>左外连接（left outer join …on…）</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101211753.png" alt="20201101211753" /></p></li><li><p>测试</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select Students.StudentId,StudentName,Gender,CSharp from ScoreList  </span><br><span class="line">left outer join Students on Students.StudentId&#x3D;ScoreList.Student.Id</span><br><span class="line">where Gender&#x3D;&#39;男&#39;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-右外连接"><a class="markdownIt-Anchor" href="#3-右外连接"></a> 3. 右外连接</h2><ol><li><p>右外连接（right outer join…on…）查询<br /><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201101212540.png" alt="20201101212540" /></p></li><li><p>测试</p><pre class="highlight"><code class="">insert into StudentClass(ClassId,ClassName)values(5,'计算机5班')  select Students.StudentId,StidentName,CSharpfrom Studentsright outer join StudentClass on Students.ClassId=StudentClass.ClassId</code></pre></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-内连接查询&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-内连接查询&quot;&gt;&lt;/a&gt; 1. 内连接查询&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内连接（inner join …on…）查询&lt;br /&gt;
&lt;img src=&quot;https:/</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据表的创建</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA/</id>
    <published>2020-10-28T19:00:51.000Z</published>
    <updated>2020-10-29T02:57:09.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-建表的基本语法"><a class="markdownIt-Anchor" href="#1-建表的基本语法"></a> 1. 建表的基本语法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table 表名</span><br><span class="line">(</span><br><span class="line">    字段1 数据类型 列的特征,</span><br><span class="line">    字段2 数据类型 列的特征,</span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="2-列的特征包含的内容"><a class="markdownIt-Anchor" href="#2-列的特征包含的内容"></a> 2. 列的特征包含的内容</h2><ol><li>是否为空（NULL）: 在输入数据时，数据的列允许为空时，可以不输入数据，否则必须输入。列是否为空要根据数据库的设计具体要求决定，对关键列必须禁止为空</li><li>是否标识列（自动编号）</li><li>是否有默认值：如果数据表的某列在用户不输入数据时，希望提供一个默认的内容，比如：用户不输入学员地址，则默认地址不详</li><li>是否为主键：主键是实体的唯一标识，保证实体不被重复。</li></ol><h2 id="3-实践"><a class="markdownIt-Anchor" href="#3-实践"></a> 3. 实践</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">use master</span><br><span class="line">go</span><br><span class="line">--判断当前数据库是否存在</span><br><span class="line">if exists(select * from sysdatabases where name&#x3D;&#39;StudentmanManageDB&#39;)</span><br><span class="line">drop database StudentManageDB</span><br><span class="line">go</span><br><span class="line">--创建数据表</span><br><span class="line">create database StudentManageDB</span><br><span class="line">on primary</span><br><span class="line">(</span><br><span class="line">    name&#x3D;&#39;StudentManageDB&#39;,--数据库名</span><br><span class="line">    filename&#x3D;E:\DB\StudentManageDB.mdf,--文件名</span><br><span class="line">    size&#x3D;10MB,--初始数据库的大小</span><br><span class="line">    filegrowth&#x3D;5MB--数据自动增长</span><br><span class="line">)</span><br><span class="line">log on </span><br><span class="line">(</span><br><span class="line">    name&#x3D;&#39;StudentManageDB_log&#39;,--数据库名</span><br><span class="line">    filename&#x3D;E:\DB\StudentManageDB_log.ldf,--文件名</span><br><span class="line">    size&#x3D;10MB,--初始数据库的大小</span><br><span class="line">    filegrowth&#x3D;5MB--数据自动增长</span><br><span class="line">)</span><br><span class="line">--创建数据表</span><br><span class="line">use StudentManageDB</span><br><span class="line">go</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;Sududents&#39;)</span><br><span class="line">drop table Students</span><br><span class="line">go </span><br><span class="line">create table Students</span><br><span class="line">(</span><br><span class="line">    StudentId int identity(10000,1) ,--学号设置为标识列，从10000开始每次自动增长1</span><br><span class="line">    StudentName varchar(20) not null ,--姓名</span><br><span class="line">    Gender char(2) not null,--性别</span><br><span class="line">    Birthday datetime not null,--出生日期</span><br><span class="line">    StudentIdNo numeric(18,0) not null,--身份证号</span><br><span class="line">    Age int not null,--年龄</span><br><span class="line">    PhoneNumber varchar(50),</span><br><span class="line">    StudentAddress varchar(500),--电话号码</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建班级表</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;SududentClass&#39;)</span><br><span class="line">drop table StudentClass</span><br><span class="line">go </span><br><span class="line">create table StudentClass</span><br><span class="line">(</span><br><span class="line">    ClassId int primary key,--班级编号，主键，直接定义</span><br><span class="line">    ClassName vchar(20) not null,</span><br><span class="line">)</span><br><span class="line">--创建成绩表</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;ScoreList&#39;)</span><br><span class="line">drop table ScoreList</span><br><span class="line">go </span><br><span class="line">create table ScoreList</span><br><span class="line">(</span><br><span class="line">    Id int identity(1,1),</span><br><span class="line">    StudentId int not null,--学号，外键</span><br><span class="line">    CSharp int null, --CSharp成绩允许为空</span><br><span class="line">    SQL int null,</span><br><span class="line">    UpdateTime datetime not null,--更新时间</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">--创建管理员数据表</span><br><span class="line">if exists(select * from sysobjects where name &#x3D; &#39;Admins&#39;)</span><br><span class="line">drop table Admins</span><br><span class="line">go </span><br><span class="line">create table Admins</span><br><span class="line">(</span><br><span class="line">    LoginId int identity(1000,1) primary key,</span><br><span class="line">    LoginPwd varchar(20) not null,--登录密码</span><br><span class="line">    AdminName varchar(20) not null</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-批处理语句-go"><a class="markdownIt-Anchor" href="#4-批处理语句-go"></a> 4. 批处理语句 go</h2><ol><li>go是批处理的标志，表示SQLServer将这些SQL语句编译为一个执行单元，提高执行效率。一般是将一些逻辑相关的业务操作语句放在同一批中，这完全由业务需求和代码编写者决定</li><li>go是SQLServer的批处理命令，只有代码编辑器才能识别并处理，编辑其他应用程序就不能使用该命令。由于每个批处理之间是独立的，因此，在一个批处理出现错误时，并不会影响其他批处理中的SQL代码的运行</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-建表的基本语法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-建表的基本语法&quot;&gt;&lt;/a&gt; 1. 建表的基本语法&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据据库的创建2</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA2/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA2/</id>
    <published>2020-10-28T17:49:46.000Z</published>
    <updated>2020-10-29T02:53:40.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建多个数据文件和日志文件"><a class="markdownIt-Anchor" href="#1-创建多个数据文件和日志文件"></a> 1. 创建多个数据文件和日志文件</h2><p>创建多个数据文件和日志文件</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028184102.png" alt="20201028184102" /></p><p>注意：创建多个数据文件和日志文件要用逗号分开，数据库文件名不能重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">use master</span><br><span class="line">go</span><br><span class="line">--判断当前数据库是否存在</span><br><span class="line">if exists(select * from sysdatabases where name&#x3D;&#39;StudentmanManageDB&#39;)</span><br><span class="line">drop database StudentManageDB</span><br><span class="line">go</span><br><span class="line">create database StudentManageDB</span><br><span class="line">on primary</span><br><span class="line">(</span><br><span class="line">    name&#x3D;&#39;StudentManageDB&#39;,--数据库名</span><br><span class="line">    filename&#x3D;E:\DB\StudentManageDB.mdf,--文件名</span><br><span class="line">    size&#x3D;10MB,--初始数据库的大小</span><br><span class="line">    filegrowth&#x3D;5MB--数据自动增长</span><br><span class="line">)</span><br><span class="line">log on </span><br><span class="line">(</span><br><span class="line">    name&#x3D;&#39;StudentManageDB_log&#39;,--数据库名</span><br><span class="line">    filename&#x3D;E:\DB\StudentManageDB_log.ldf,--文件名</span><br><span class="line">    size&#x3D;10MB,--初始数据库的大小</span><br><span class="line">    filegrowth&#x3D;5MB--数据自动增长</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="2-分离与附加数据库"><a class="markdownIt-Anchor" href="#2-分离与附加数据库"></a> 2. 分离与附加数据库</h2><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028190653.png" alt="20201028190653" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-创建多个数据文件和日志文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-创建多个数据文件和日志文件&quot;&gt;&lt;/a&gt; 1. 创建多个数据文件和日志文件&lt;/h2&gt;
&lt;p&gt;创建多个数据文件和日志文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;h</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据据库的创建1</title>
    <link href="https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA1/"/>
    <id>https://cyn51666.github.io/2020/10/29/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA1/</id>
    <published>2020-10-28T16:48:46.000Z</published>
    <updated>2020-10-29T02:53:27.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库的创建1"><a class="markdownIt-Anchor" href="#数据库的创建1"></a> 数据库的创建1</h1><h2 id="1-基本概念"><a class="markdownIt-Anchor" href="#1-基本概念"></a> 1. 基本概念</h2><ol><li><p>创建数据库： create database phpDb</p></li><li><p>删除数据库： drop database phpDb</p></li></ol><hr /><h2 id="2-数据库分类"><a class="markdownIt-Anchor" href="#2-数据库分类"></a> 2. 数据库分类</h2><h3 id="1-系统数据库"><a class="markdownIt-Anchor" href="#1-系统数据库"></a> 1. 系统数据库</h3><p>master: 保存已有数据库的信息（系统登录，配置设置，已连接的SERVER等）</p><p>model: 创建新用户数据库的模板数据库</p><p>msdb: 用来保存数据库备份，SQL Agent信息，DTS程序包，SQLSERVER任务等信息</p><p>tempdb: 存有临时对象，例如临时表格和存储过程</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028175702.png" alt="20201028175702" /></p><h3 id="2-用户数据库"><a class="markdownIt-Anchor" href="#2-用户数据库"></a> 2. 用户数据库</h3><p>用户数据库的组成: 主数据文件+日志文件</p><p><img src="https://raw.githubusercontent.com/cyn51666/Blog-images/master/20201028180023.png" alt="20201028180023" /></p><hr /><h2 id="3-创建数据库例子"><a class="markdownIt-Anchor" href="#3-创建数据库例子"></a> 3. 创建数据库例子</h2><pre class="highlight"><code class=""> --指向当前要使用的数据库   use master   go   --创建数据库  create database StudentManageDBon primary(--数据库的逻辑名name = 'StudentManageDB_data',--数据库的物理文件名（绝对路径）filename='E:/D/StudentManage_data.mdf',--数据库文件初始大小size=10MB,--数据文件增长量filegrowth=1MB)log on (name = 'StudentManageDB_log',filename = 'StudentManageDB_log.ldf',size=2MB,filegrowth=1MB)go</code></pre><p>primary代表主文件组，主要用于管理磁盘空间，文件组分为主文件组和次文件组，日志文件不属于任何文件组</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库的创建1&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据库的创建1&quot;&gt;&lt;/a&gt; 数据库的创建1&lt;/h1&gt;
&lt;h2 id=&quot;1-基本概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-基本概念&quot;&gt;</summary>
      
    
    
    
    <category term="SQL Server" scheme="https://cyn51666.github.io/categories/SQL-Server/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C Sharp实体类在开发中的应用</title>
    <link href="https://cyn51666.github.io/2020/10/12/C%20Sharp%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://cyn51666.github.io/2020/10/12/C%20Sharp%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2020-10-12T12:48:48.000Z</published>
    <updated>2020-10-13T00:29:13.795Z</updated>
    
    <content type="html"><![CDATA[<ol><li>前后台代码混编的缺点<ol><li>程序编写人员必须非常实习后台数据的设计</li><li>业务逻辑复杂时很难查找错误且不利于后期维护</li><li>不符合面向对象的设计思想</li></ol></li></ol><hr /><ol start="2"><li>问题解决<ol><li>将数据展示代码和数据访问代码分离</li><li>根据当前需要访问的后台实体，创建一个对应的数据访问类</li><li>将对该实体操作的方法封装到对应的访问类中</li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;前后台代码混编的缺点
&lt;ol&gt;
&lt;li&gt;程序编写人员必须非常实习后台数据的设计&lt;/li&gt;
&lt;li&gt;业务逻辑复杂时很难查找错误且不利于后期维护&lt;/li&gt;
&lt;li&gt;不符合面向对象的设计思想&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;ol star</summary>
      
    
    
    
    <category term="C Sharp" scheme="https://cyn51666.github.io/categories/C-Sharp/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C Sharp对象职责明确原则</title>
    <link href="https://cyn51666.github.io/2020/10/12/C%20Sharp%E8%81%8C%E8%B4%A3%E6%98%8E%E7%A1%AE%E5%8E%9F%E5%88%99/"/>
    <id>https://cyn51666.github.io/2020/10/12/C%20Sharp%E8%81%8C%E8%B4%A3%E6%98%8E%E7%A1%AE%E5%8E%9F%E5%88%99/</id>
    <published>2020-10-12T12:48:47.000Z</published>
    <updated>2020-10-13T00:27:10.922Z</updated>
    
    <content type="html"><![CDATA[<ol><li>前后台代码混编的缺点<ol><li>程序编写人员必须非常实习后台数据的设计</li><li>业务逻辑复杂时很难查找错误且不利于后期维护</li><li>不符合面向对象的设计思想</li></ol></li></ol><hr /><ol start="2"><li>问题解决<ol><li>将数据展示代码和数据访问代码分离</li><li>根据当前需要访问的后台实体，创建一个对应的数据访问类</li><li>将对该实体操作的方法封装到对应的访问类中</li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;前后台代码混编的缺点
&lt;ol&gt;
&lt;li&gt;程序编写人员必须非常实习后台数据的设计&lt;/li&gt;
&lt;li&gt;业务逻辑复杂时很难查找错误且不利于后期维护&lt;/li&gt;
&lt;li&gt;不符合面向对象的设计思想&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;ol star</summary>
      
    
    
    
    <category term="C Sharp" scheme="https://cyn51666.github.io/categories/C-Sharp/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C Sharp方法参数过多的缺点</title>
    <link href="https://cyn51666.github.io/2020/10/12/C%20Sharp%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E8%BF%87%E5%A4%9A%E7%9A%84%E7%BC%BA%E7%82%B9/"/>
    <id>https://cyn51666.github.io/2020/10/12/C%20Sharp%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E8%BF%87%E5%A4%9A%E7%9A%84%E7%BC%BA%E7%82%B9/</id>
    <published>2020-10-12T12:48:46.000Z</published>
    <updated>2020-10-13T00:19:54.553Z</updated>
    
    <content type="html"><![CDATA[<ol><li>方法参数过多的缺点<ol><li>定义和使用不方便，很容易把参数写错</li><li>当对象的属性变化时，方法的参数必须改变</li><li>参数的改变，造成对象接口不稳定，降低了可维护性，可扩展性和安全性，与面向对象原则相悖</li><li>方法参数多，不符合面向对象的低耦合，高内聚的要求</li><li>后台方法的编写依赖数据库的完成</li><li>前台代码实现依赖后台方法的完成，团队中无法并行开发</li></ol></li></ol><hr /><ol start="2"><li>问题思路与解决<ol><li>为类的设计提供一个规范，稳定对象的接口</li><li>不同开发人员只需要按照规范接口即可同步开发</li></ol></li></ol><hr /><ol start="3"><li>问题解决办法<ol><li>使用“实体类”作为方法参数，稳定对外接口</li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;方法参数过多的缺点
&lt;ol&gt;
&lt;li&gt;定义和使用不方便，很容易把参数写错&lt;/li&gt;
&lt;li&gt;当对象的属性变化时，方法的参数必须改变&lt;/li&gt;
&lt;li&gt;参数的改变，造成对象接口不稳定，降低了可维护性，可扩展性和安全性，与面向对象原则相悖&lt;/li&gt;
&lt;li&gt;方法参数</summary>
      
    
    
    
    <category term="C Sharp" scheme="https://cyn51666.github.io/categories/C-Sharp/"/>
    
    
    <category term="笔记" scheme="https://cyn51666.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>再别康桥2</title>
    <link href="https://cyn51666.github.io/2020/10/12/%E5%86%8D%E5%88%AB%E5%BA%B7%E6%A1%A52/"/>
    <id>https://cyn51666.github.io/2020/10/12/%E5%86%8D%E5%88%AB%E5%BA%B7%E6%A1%A52/</id>
    <published>2020-10-12T04:26:46.000Z</published>
    <updated>2020-10-23T03:22:11.725Z</updated>
    
    <content type="html"><![CDATA[<p>那河畔的金柳，</p><hr /><p>是夕阳中的新娘；</p><hr /><p>波光里的艳影，</p><hr /><p>在我的心头荡漾。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;那河畔的金柳，&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;是夕阳中的新娘；&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;波光里的艳影，&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;在我的心头荡漾。&lt;/p&gt;
&lt;hr /&gt;
</summary>
      
    
    
    
    <category term="hexo" scheme="https://cyn51666.github.io/categories/hexo/"/>
    
    
    <category term="基础" scheme="https://cyn51666.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>再别康桥1</title>
    <link href="https://cyn51666.github.io/2020/10/11/%E5%86%8D%E5%88%AB%E5%BA%B7%E6%A1%A51/"/>
    <id>https://cyn51666.github.io/2020/10/11/%E5%86%8D%E5%88%AB%E5%BA%B7%E6%A1%A51/</id>
    <published>2020-10-11T04:26:46.000Z</published>
    <updated>2020-10-12T07:50:21.306Z</updated>
    
    <content type="html"><![CDATA[<p>轻轻的我走了，<br />正如我轻轻的来；<br />我轻轻的招手，<br />作别西天的云彩。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;轻轻的我走了，&lt;br /&gt;
正如我轻轻的来；&lt;br /&gt;
我轻轻的招手，&lt;br /&gt;
作别西天的云彩。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="hexo" scheme="https://cyn51666.github.io/categories/hexo/"/>
    
    
    <category term="基础" scheme="https://cyn51666.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cyn51666.github.io/2020/10/11/hello-world/"/>
    <id>https://cyn51666.github.io/2020/10/11/hello-world/</id>
    <published>2020-10-11T04:23:51.777Z</published>
    <updated>2020-10-11T04:23:51.777Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
